{"version":3,"sources":["pages/home/index.js","pages/register/index.js","pages/vote/index.js","pages/result/index.js","App.js","serviceWorker.js","index.js"],"names":["Home","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","buttonStyle","width","iconStyle","fontSize","display","padding","react_default","a","createElement","className","style","background","index_es","icon","faUserPlus","objectSpread","color","Button","href","variant","faVoteYea","onClick","console","log","position","bottom","transform","React","Component","Register","changeValue","key","e","setState","defineProperty","target","value","state","constituencies","constituency","name","age","address","dialogOpen","message","messageTitle","error","fieldStyle","margin","handleChange","changeConstituency","bind","assertThisInitialized","register","handleClose","opts","comp","fetch","method","headers","Accept","Content-Type","body","JSON","stringify","then","response","status","json","result","event","_this2","res","const_opts","map","x","MenuItem","FormControl","TextField","onChange","label","type","Select","textAlign","Dialog","open","onClose","aria-labelledby","aria-describedby","DialogTitle","id","DialogContent","DialogContentText","DialogActions","autoFocus","Vote","test_id","parties","party_id","verify","getParties","handleParty","vote","verified","_this3","_this4","vote_opts","voter_id","data","party_opts","disabled","diabled","Result","results","getResults","url","sort","b","votes","row","i","TableRow","TableCell","align","component","scope","Table","TableHead","TableBody","App","react_router","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","react_router_dom","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5ec5c9a4.chunk.js","sourcesContent":["import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport './style.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faUserPlus, faVoteYea } from '@fortawesome/free-solid-svg-icons'\n\nclass Home extends React.Component {\n  constructor(props){\n    super(props);\n    this.buttonStyle = {width: '260px'};\n    this.iconStyle = {fontSize: '200px', display: 'inline-block', padding: '20px'};\n  }\n\n  render(){\n    return (\n      <div className=\"App\">\n        <div className=\"appSection\" style={{background: \"#f50057\"}}>\n          <FontAwesomeIcon icon={faUserPlus} style={{...this.iconStyle, ...{color: \"#3f51b5\"}}}/>\n          <br />\n          <Button href=\"/#/register\" variant=\"contained\" color=\"primary\" style={this.buttonStyle}>\n            Register\n          </Button>\n        </div>\n        <div className=\"appSection\" style={{background: \"#3f51b5\"}}>\n          <FontAwesomeIcon icon={faVoteYea} style={{...this.iconStyle, ...{color:\"#f50057\"}}}/>\n          <br />\n          <Button href=\"/#/vote\" variant=\"contained\" color=\"secondary\" style={this.buttonStyle} onClick={()=>{console.log(\"Clicked\")}}>\n            Vote\n          </Button>\n        </div>\n          <Button href=\"/#/result\" variant=\"contained\" color=\"black\" style={{...this.buttonStyle, background:\"white\", color: \"black\", position: \"absolute\", bottom: \"25%\", transform: \"translateX(-50%)\"}} onClick={()=>{console.log(\"Clicked\")}}>\n            Results\n          </Button>\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Select from '@material-ui/core/Select';\nimport './style.css';\nimport { MenuItem, InputLabel, FormControl, OutlinedInput } from '@material-ui/core';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nclass Register extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n        constituencies : [],\n        constituency: 0,\n        name: '',\n        age: 0,\n        address: '',\n        dialogOpen: false,\n        message: '',\n        messageTitle: '',\n        error: false\n    }\n    this.fieldStyle = {width: '300px', margin: '10px 0px', color: 'green'};\n    this.buttonStyle = {width: '100%', margin: '5px 0px'};\n    this.handleChange = this.changeConstituency.bind(this);\n    this.register = this.register.bind(this);\n    this.changeValue = this.changeValue.bind(this);\n    this.handleClose = this.handleClose.bind(this);\n  }\n\n  register(e){\n    var opts = {...this.state};\n    delete opts['constituencies'];\n    delete opts['dialogOpen'];\n    delete opts['message'];\n    delete opts['messageTitle'];\n    var comp = this;\n    fetch('/api/voter/', {\n        method: 'post',\n        headers: {\n            'Accept': 'application/json, text/plain, */*',\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(opts),\n    }).then(function(response) {\n      console.log(response)\n      if(response.status==200){\n        response.json().then((result)=>{\n          comp.setState({message: result['message'], messageTitle: \"Registered\", dialogOpen: true, error: false});\n        })\n      }\n      else{\n        response.json().then((result)=>{\n          comp.setState({message: result['message'], error: true});\n        })\n      }\n    })\n  }\n\n  changeConstituency(event){\n    this.setState({constituency: event.target.value});\n  };\n\n  handleClose(){\n    this.setState({dialogOpen: false});\n  }\n\n  componentDidMount(){\n    fetch(\"/api/constituency/\")\n    .then(res => res.json())\n    .then(\n      (result) => {\n          this.setState({constituencies: result});\n      }\n    );\n  }\n\n  changeValue = (key) => (e) => {\n    this.setState({[key]: e.target.value});\n  }\n\n  chnageConstituency(event){\n      \n  }\n\n  render(){\n    let const_opts = this.state.constituencies.map((x)=>{\n        return (<MenuItem value={x['name']}>{x['name']}</MenuItem>)\n    });\n    return (\n      <div className=\"Register\">\n        <div className=\"registerWindow\">\n            <span>Register</span>\n            <br/>\n            <FormControl variant=\"outlined\">\n                <TextField style={this.fieldStyle} onChange={this.changeValue('name')} label=\"Name\" variant=\"outlined\" /><br />\n                <TextField style={this.fieldStyle} onChange={this.changeValue('age')} label=\"Age\" variant=\"outlined\" type=\"number\" /><br />\n                <TextField style={this.fieldStyle} onChange={this.changeValue('address')} label=\"Address\" variant=\"outlined\" /><br />\n                <span style={{fontSize: \"12px\"}}>Constituency</span>\n                <Select style={this.fieldStyle}\n                    value={this.state.constituency}\n                    onChange={this.handleChange}>\n                    {const_opts}\n                </Select>\n                <br />\n                <br/>\n                <Button href=\"/#/\" style={this.buttonStyle} variant=\"outlined\" color=\"secondary\">Cancel</Button>\n                <Button style={this.buttonStyle} variant=\"contained\" color=\"secondary\" onClick={this.register}>Register</Button>\n                <br/>\n            </FormControl>\n            {this.state.error && (<span style={{color: 'red', display: 'inline-block', width: '100%', textAlign: 'center'}}>{this.state.message}</span>)}\n        </div>\n        <Dialog\n          open={this.state.dialogOpen}\n          onClose={this.handleClose}\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\"\n        >\n          <DialogTitle id=\"alert-dialog-title\">{this.state.messageTitle}</DialogTitle>\n          <DialogContent>\n            <DialogContentText id=\"alert-dialog-description\">\n              {this.state.message}\n            </DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={this.handleClose} color=\"primary\" autoFocus>\n              Ok\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </div>\n    );\n  }\n}\n\nexport default Register;\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Select from '@material-ui/core/Select';\nimport './style.css';\nimport { MenuItem, InputLabel, FormControl, OutlinedInput } from '@material-ui/core';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nclass Vote extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n        constituencies: [],\n        constituency: 0,\n        test_id: '',\n        id: '',\n        name: '',\n        address: '',\n        age: 0,\n        parties: [],\n        dialogOpen: false,\n        party_id: 0,\n        message: '',\n        error: false\n    }\n    this.fieldStyle = {width: '100%', margin: '10px 0px', color: 'green'};\n    this.buttonStyle = {width: '100%', margin: '5px 0px'};\n    this.handleChange = this.changeConstituency.bind(this);\n    this.changeValue = this.changeValue.bind(this);\n    this.verify = this.verify.bind(this);\n    this.getParties = this.getParties.bind(this);\n    this.handleParty = this.handleParty.bind(this);\n    this.vote = this.vote.bind(this);\n    this.verified = false;\n  }\n\n  handleParty(event){\n    this.setState({party_id: event.target.value});\n  };\n\n  changeConstituency(event){\n    this.setState({constituency: event.target.value});\n  };\n\n  changeValue = (key) => (e) => {\n    this.setState({[key]: e.target.value});\n  }\n\n  componentDidMount(){\n    fetch(\"/api/constituency/\")\n    .then(res => res.json())\n    .then(\n        (result) => {\n            this.setState({constituencies: result});\n        }\n    );\n  }\n\n  getParties(){\n    fetch(\"/api/constituency/\"+this.state['constituency']+\"/party/\")\n    .then((res)=>{\n      console.log(res);\n      return res.json();\n    })\n    .then(\n        (result) => {\n            this.setState({parties: result});\n        }\n    );\n  }\n\n  verify(){\n    console.log(\"/api/constituency/\"+this.state['constituency']+\"/voter/\"+this.state['voter_id']);\n    fetch(\"/api/constituency/\"+this.state['constituency']+\"/voter/\"+this.state['test_id']+\"/\")\n    .then((res) => {\n      console.log(res);\n      if(res.status == 200){\n        res.json().then((result)=>{\n          this.setState({...result['voter'], verified: true});\n          console.log(\"voter\", result);\n          if(result['voter']['voted']==true){\n            this.setState({error: true, message: 'Voter has already voted'});\n          }\n          else{\n            this.setState({error: false, message: ''});\n          }\n          this.getParties();\n        })\n      }else{\n        res.json().then((result)=>{\n          this.setState({error: true, message: result['message']});\n        })\n      }\n    })\n  }\n\n  vote(){\n    var vote_opts = {'party_id': this.state['party_id'], 'voter_id': this.state['id']}\n    var comp = this;\n    fetch('/api/constituency/'+this.state['constituency']+'/vote/', {\n      method: 'post',\n      headers: {\n          'Accept': 'application/json, text/plain, */*',\n          'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(vote_opts),\n    }).then(function(response) {\n      console.log(response);\n      return response.json();\n    }).then(function(data) {\n      comp.setState({message: data['message'], dialogOpen: true})\n    });\n  }\n\n  render(){\n    let const_opts = this.state.constituencies.map((x)=>{\n        return (<MenuItem value={x['name']}>{x['name']}</MenuItem>)\n    });\n    let party_opts = this.state.parties.map((x)=>{\n        return (<MenuItem value={x['party_id']}>{x['party_name']}</MenuItem>)\n    });\n    return (\n        <div className=\"Vote\">\n            <div className=\"voteWindow\">\n              { !this.state.verified &&\n                (<div style={{display: 'inline-block', width: \"300px\"}}>\n                      <span style={{fontSize: \"12px\"}}>Constituency</span>\n                      <Select style={this.fieldStyle}\n                          value={this.state.constituency}\n                          onChange={this.handleChange}>\n                          {const_opts}\n                      </Select>\n                      <TextField style={this.fieldStyle} onChange={this.changeValue('test_id')} label=\"Voter ID\" variant=\"outlined\" /><br />\n                      <Button style={this.buttonStyle} label=\"Cancel\" variant=\"outlined\" color=\"primary\" href=\"/#/\">Cancel</Button>\n                      <Button style={this.buttonStyle} label=\"Verify\" variant=\"contained\" color=\"primary\" onClick={this.verify}>Verify</Button>\n                      {this.state.error && (<span style={{color: 'red', display: 'inline-block', width: '100%', textAlign: 'center'}}>{this.state.message}</span>)}\n                </div>)\n              }\n              { this.state.verified &&\n                (<div style={{display: 'inline-block', width:'400px'}}>\n                      <TextField style={this.fieldStyle} disabled={true} label=\"Voter ID\" variant=\"outlined\" value={this.state['id']}/>\n                      <TextField style={this.fieldStyle} disabled={true} label=\"Name\" variant=\"outlined\" value={this.state['name']}/><br />\n                      <TextField style={this.fieldStyle} disabled={true} label=\"Age\" variant=\"outlined\" value={this.state['age']} />\n                      <TextField style={this.fieldStyle} disabled={true} label=\"Address\" variant=\"outlined\" value={this.state['address']} /><br />\n                      <span style={{fontSize: \"12px\"}}>Party</span>\n                      <Select style={this.fieldStyle}\n                          value={this.state.party_id}\n                          onChange={this.handleParty}>\n                          {party_opts}\n                      </Select>\n                      <Button style={this.buttonStyle} label=\"Cancel\" variant=\"outlined\" color=\"primary\" href=\"/#/\">Cancel</Button>\n                      <Button style={this.buttonStyle} label=\"Verify\" variant=\"contained\" color=\"primary\" diabled={this.state['voted']} onClick={this.vote}>Vote</Button>\n                      {this.state.error && (<span style={{color: 'red', display: 'inline-block', width: '100%', textAlign: 'center'}}>{this.state.message}</span>)}\n                </div>)\n              }\n            </div>\n            <Dialog\n              open={this.state.dialogOpen}\n              onClose={this.handleClose}\n              aria-labelledby=\"alert-dialog-title\"\n              aria-describedby=\"alert-dialog-description\"\n            >\n              <DialogTitle id=\"alert-dialog-title\">{\"Message\"}</DialogTitle>\n              <DialogContent>\n                <DialogContentText id=\"alert-dialog-description\">\n                  {this.state.message}\n                </DialogContentText>\n              </DialogContent>\n              <DialogActions>\n                <Button href=\"/#/vote\" color=\"primary\" autoFocus>\n                  Ok\n                </Button>\n              </DialogActions>\n            </Dialog>\n        </div>\n    );\n  }\n}\n\nexport default Vote;\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Select from '@material-ui/core/Select';\nimport './style.css';\nimport { MenuItem, InputLabel, FormControl, OutlinedInput } from '@material-ui/core';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\n\nclass Result extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n        constituencies: [],\n        constituency: \"all\",\n        results: [],\n        error: false,\n        message: ''\n    }\n    this.fieldStyle = {width: '100%', margin: '10px 0px', color: 'green'};\n    this.buttonStyle = {width: '100%', margin: '5px 0px'};\n    this.handleChange = this.changeConstituency.bind(this);\n    this.getResults = this.getResults.bind(this);\n  }\n\n  changeConstituency(event){\n    this.setState({constituency: event.target.value});\n  };\n\n  componentDidMount(){\n    fetch(\"/api/constituency/\")\n    .then(res => res.json())\n    .then(\n        (result) => {\n            this.setState({constituencies: result});\n            this.getResults();\n        }\n    );\n  }\n\n  getResults(){\n    var comp = this;\n    var url = \"/api/constituency/\"+this.state['constituency']+\"/result/\"\n    if(this.state['constituency']==\"all\")\n      url = \"/api/result/\"\n    fetch(url)\n    .then((res)=>{\n      console.log(res);\n      if(res.status==200){\n        res.json().then((result)=>{\n          comp.setState({results: result})\n        });\n      }\n    })\n  }\n\n  render(){\n    let const_opts = this.state.constituencies.map((x)=>{\n        return (<MenuItem value={x['name']}>{x['name']}</MenuItem>)\n    });\n    let results = this.state.results.sort((a,b)=>(a.votes<b.votes))\n    results = results.map((row,i) => (\n        <TableRow key={row.name}>\n            <TableCell align=\"right\">{i+1}.</TableCell>\n            <TableCell component=\"th\" scope=\"row\">\n                {row.name}\n            </TableCell>\n            <TableCell align=\"right\">{row.votes}</TableCell>\n        </TableRow>\n    ))\n    return (\n        <div className=\"Vote\">\n            <div className=\"voteWindow\">\n                <div style={{display: 'inline-block', width: \"300px\"}}>\n                    <span style={{fontSize: \"12px\"}}>Constituency</span>\n                    <Select style={this.fieldStyle}\n                        value={this.state.constituency}\n                        onChange={this.handleChange}>\n                        <MenuItem value={\"all\"}>All</MenuItem>\n                        {const_opts}\n                    </Select>\n                    <Button style={this.buttonStyle} variant=\"contained\" color=\"primary\" diabled={this.state['voted']} onClick={this.getResults}>Get Results</Button>\n                    <Table>\n                        <TableHead>\n                        <TableRow>\n                            <TableCell></TableCell>\n                            <TableCell>Party</TableCell>\n                            <TableCell align=\"right\">Votes</TableCell>\n                        </TableRow>\n                        </TableHead>\n                        <TableBody>\n                        {results}\n                        </TableBody>\n                    </Table>\n                    </div>\n                    {this.state.error && (<span style={{color: 'red', display: 'inline-block', width: '100%', textAlign: 'center'}}>{this.state.message}</span>)}\n            </div>\n        </div>\n    );\n  }\n}\n\nexport default Result;\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom'\nimport Home from './pages/home'\nimport Register from './pages/register'\nimport Vote from './pages/vote'\nimport Result from './pages/result'\n\nclass App extends React.Component {\n  constructor(props){\n    super(props);\n    this.buttonStyle = {width: '260px'};\n    this.iconStyle = {fontSize: '200px', display: 'inline-block', padding: '20px'};\n  }\n\n  render(){\n    return (\n        <Switch>\n          <Route exact path=\"/register\" component={Register} />\n          <Route exact path=\"/vote\" component={Vote} />\n          <Route exact path=\"/result\" component={Result} />\n          <Route path=\"/\" component={Home} />\n        </Switch>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { HashRouter } from 'react-router-dom';\n\nReactDOM.render((\n    <HashRouter>\n        <App />\n    </HashRouter>\n    ), document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}